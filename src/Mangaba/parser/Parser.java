/* This file was generated by SableCC (http://www.sablecc.org/). */

package Mangaba.parser;

import Mangaba.lexer.*;
import Mangaba.node.*;
import Mangaba.analysis.*;
import java.util.*;

import java.io.DataInputStream;
import java.io.BufferedInputStream;
import java.io.IOException;

@SuppressWarnings("nls")
public class Parser
{
    public final Analysis ignoredTokens = new AnalysisAdapter();

    protected ArrayList<Object> nodeList;

    private final Lexer lexer;
    private final ListIterator<Object> stack = new LinkedList<Object>().listIterator();
    private int last_pos;
    private int last_line;
    private Token last_token;
    private final TokenIndex converter = new TokenIndex();
    private final int[] action = new int[2];

    private final static int SHIFT = 0;
    private final static int REDUCE = 1;
    private final static int ACCEPT = 2;
    private final static int ERROR = 3;

    public Parser(@SuppressWarnings("hiding") Lexer lexer)
    {
        this.lexer = lexer;
    }

    protected void filter() throws ParserException, LexerException, IOException
    {
        // Empty body
    }

    private void push(int numstate, ArrayList<Object> listNode, boolean hidden) throws ParserException, LexerException, IOException
    {
        this.nodeList = listNode;

        if(!hidden)
        {
            filter();
        }

        if(!this.stack.hasNext())
        {
            this.stack.add(new State(numstate, this.nodeList));
            return;
        }

        State s = (State) this.stack.next();
        s.state = numstate;
        s.nodes = this.nodeList;
    }

    private int goTo(int index)
    {
        int state = state();
        int low = 1;
        int high = gotoTable[index].length - 1;
        int value = gotoTable[index][0][1];

        while(low <= high)
        {
            // int middle = (low + high) / 2;
            int middle = (low + high) >>> 1;

            if(state < gotoTable[index][middle][0])
            {
                high = middle - 1;
            }
            else if(state > gotoTable[index][middle][0])
            {
                low = middle + 1;
            }
            else
            {
                value = gotoTable[index][middle][1];
                break;
            }
        }

        return value;
    }

    private int state()
    {
        State s = (State) this.stack.previous();
        this.stack.next();
        return s.state;
    }

    private ArrayList<Object> pop()
    {
        return ((State) this.stack.previous()).nodes;
    }

    private int index(Switchable token)
    {
        this.converter.index = -1;
        token.apply(this.converter);
        return this.converter.index;
    }

    @SuppressWarnings("unchecked")
    public Start parse() throws ParserException, LexerException, IOException
    {
        push(0, null, true);
        List<Node> ign = null;
        while(true)
        {
            while(index(this.lexer.peek()) == -1)
            {
                if(ign == null)
                {
                    ign = new LinkedList<Node>();
                }

                ign.add(this.lexer.next());
            }

            if(ign != null)
            {
                this.ignoredTokens.setIn(this.lexer.peek(), ign);
                ign = null;
            }

            this.last_pos = this.lexer.peek().getPos();
            this.last_line = this.lexer.peek().getLine();
            this.last_token = this.lexer.peek();

            int index = index(this.lexer.peek());
            this.action[0] = Parser.actionTable[state()][0][1];
            this.action[1] = Parser.actionTable[state()][0][2];

            int low = 1;
            int high = Parser.actionTable[state()].length - 1;

            while(low <= high)
            {
                int middle = (low + high) / 2;

                if(index < Parser.actionTable[state()][middle][0])
                {
                    high = middle - 1;
                }
                else if(index > Parser.actionTable[state()][middle][0])
                {
                    low = middle + 1;
                }
                else
                {
                    this.action[0] = Parser.actionTable[state()][middle][1];
                    this.action[1] = Parser.actionTable[state()][middle][2];
                    break;
                }
            }

            switch(this.action[0])
            {
                case SHIFT:
		    {
		        ArrayList<Object> list = new ArrayList<Object>();
		        list.add(this.lexer.next());
                        push(this.action[1], list, false);
                    }
		    break;
                case REDUCE:
                    {
                        int reduction = this.action[1];
                        if(reduction < 500) reduce_0(reduction);
                    }
                    break;
                case ACCEPT:
                    {
                        EOF node2 = (EOF) this.lexer.next();
                        PDecVar node1 = (PDecVar) pop().get(0);
                        Start node = new Start(node1, node2);
                        return node;
                    }
                case ERROR:
                    throw new ParserException(this.last_token,
                        "[" + this.last_line + "," + this.last_pos + "] " +
                        Parser.errorMessages[Parser.errors[this.action[1]]]);
            }
        }
    }

    private void reduce_0(int reduction) throws IOException, LexerException, ParserException
    {
        switch(reduction)
        {
            case 0: /* reduce ADecVar */
            {
                ArrayList<Object> list = new0();
                push(goTo(0), list, false);
            }
            break;
            case 1: /* reduce AListaNomes */
            {
                ArrayList<Object> list = new1();
                push(goTo(1), list, false);
            }
            break;
            case 2: /* reduce AIdListaNomes */
            {
                ArrayList<Object> list = new2();
                push(goTo(1), list, false);
            }
            break;
            case 3: /* reduce ADecFuncao */
            {
                ArrayList<Object> list = new3();
                push(goTo(2), list, false);
            }
            break;
            case 4: /* reduce ATipoRetorno */
            {
                ArrayList<Object> list = new4();
                push(goTo(3), list, false);
            }
            break;
            case 5: /* reduce APVaziaParametros */
            {
                ArrayList<Object> list = new5();
                push(goTo(4), list, false);
            }
            break;
            case 6: /* reduce AParamsParametros */
            {
                ArrayList<Object> list = new6();
                push(goTo(4), list, false);
            }
            break;
            case 7: /* reduce AParamParametros */
            {
                ArrayList<Object> list = new7();
                push(goTo(4), list, false);
            }
            break;
            case 8: /* reduce AParamParametro */
            {
                ArrayList<Object> list = new8();
                push(goTo(5), list, false);
            }
            break;
            case 9: /* reduce ABloco */
            {
                ArrayList<Object> list = new9();
                push(goTo(6), list, false);
            }
            break;
            case 10: /* reduce AListaDec */
            {
                ArrayList<Object> list = new10();
                push(goTo(7), list, false);
            }
            break;
            case 11: /* reduce AListaListaDec */
            {
                ArrayList<Object> list = new11();
                push(goTo(7), list, false);
            }
            break;
            case 12: /* reduce AListaDecListaDec1 */
            {
                ArrayList<Object> list = new12();
                push(goTo(8), list, false);
            }
            break;
            case 13: /* reduce ADecListaDec1 */
            {
                ArrayList<Object> list = new13();
                push(goTo(8), list, false);
            }
            break;
            case 14: /* reduce AListaComando */
            {
                ArrayList<Object> list = new14();
                push(goTo(9), list, false);
            }
            break;
            case 15: /* reduce AListaListaComando */
            {
                ArrayList<Object> list = new15();
                push(goTo(9), list, false);
            }
            break;
            case 16: /* reduce AListaComListaComando1 */
            {
                ArrayList<Object> list = new16();
                push(goTo(10), list, false);
            }
            break;
            case 17: /* reduce AComandoListaComando1 */
            {
                ArrayList<Object> list = new17();
                push(goTo(10), list, false);
            }
            break;
            case 18: /* reduce AComando */
            {
                ArrayList<Object> list = new18();
                push(goTo(11), list, false);
            }
            break;
            case 19: /* reduce AComSeComando */
            {
                ArrayList<Object> list = new19();
                push(goTo(11), list, false);
            }
            break;
            case 20: /* reduce AEnquantoComando */
            {
                ArrayList<Object> list = new20();
                push(goTo(11), list, false);
            }
            break;
            case 21: /* reduce AParaComando */
            {
                ArrayList<Object> list = new21();
                push(goTo(11), list, false);
            }
            break;
            case 22: /* reduce AParaCadaComando */
            {
                ArrayList<Object> list = new22();
                push(goTo(11), list, false);
            }
            break;
            case 23: /* reduce AAtribuicaoComando */
            {
                ArrayList<Object> list = new23();
                push(goTo(11), list, false);
            }
            break;
            case 24: /* reduce ARetornoComando */
            {
                ArrayList<Object> list = new24();
                push(goTo(11), list, false);
            }
            break;
            case 25: /* reduce AChComando */
            {
                ArrayList<Object> list = new25();
                push(goTo(11), list, false);
            }
            break;
            case 26: /* reduce AComandoSe */
            {
                ArrayList<Object> list = new26();
                push(goTo(12), list, false);
            }
            break;
            case 27: /* reduce AComandoSenao */
            {
                ArrayList<Object> list = new27();
                push(goTo(13), list, false);
            }
            break;
            case 28: /* reduce AComandoEnquanto */
            {
                ArrayList<Object> list = new28();
                push(goTo(14), list, false);
            }
            break;
            case 29: /* reduce AComandoPara */
            {
                ArrayList<Object> list = new29();
                push(goTo(15), list, false);
            }
            break;
            case 30: /* reduce AComandoParaCada */
            {
                ArrayList<Object> list = new30();
                push(goTo(16), list, false);
            }
            break;
            case 31: /* reduce AAuxPara */
            {
                ArrayList<Object> list = new31();
                push(goTo(17), list, false);
            }
            break;
            case 32: /* reduce AP1ListaPontoVirgula */
            {
                ArrayList<Object> list = new32();
                push(goTo(18), list, false);
            }
            break;
            case 33: /* reduce AP2ListaPontoVirgula */
            {
                ArrayList<Object> list = new33();
                push(goTo(18), list, false);
            }
            break;
            case 34: /* reduce AAuxParaCada */
            {
                ArrayList<Object> list = new34();
                push(goTo(19), list, false);
            }
            break;
            case 35: /* reduce AI1ListaId */
            {
                ArrayList<Object> list = new35();
                push(goTo(20), list, false);
            }
            break;
            case 36: /* reduce AI2ListaId */
            {
                ArrayList<Object> list = new36();
                push(goTo(20), list, false);
            }
            break;
            case 37: /* reduce AAtrib */
            {
                ArrayList<Object> list = new37();
                push(goTo(21), list, false);
            }
            break;
            case 38: /* reduce AVariavelTipadaAtrib */
            {
                ArrayList<Object> list = new38();
                push(goTo(21), list, false);
            }
            break;
            case 39: /* reduce AListaAtrib */
            {
                ArrayList<Object> list = new39();
                push(goTo(22), list, false);
            }
            break;
            case 40: /* reduce AAtribListaAtrib */
            {
                ArrayList<Object> list = new40();
                push(goTo(22), list, false);
            }
            break;
            case 41: /* reduce ARetorno */
            {
                ArrayList<Object> list = new41();
                push(goTo(23), list, false);
            }
            break;
            case 42: /* reduce AVar */
            {
                ArrayList<Object> list = new42();
                push(goTo(24), list, false);
            }
            break;
            case 43: /* reduce AExprVar */
            {
                ArrayList<Object> list = new43();
                push(goTo(24), list, false);
            }
            break;
            case 44: /* reduce AIntTipoBase */
            {
                ArrayList<Object> list = new44();
                push(goTo(25), list, false);
            }
            break;
            case 45: /* reduce ACaracterTipoBase */
            {
                ArrayList<Object> list = new45();
                push(goTo(25), list, false);
            }
            break;
            case 46: /* reduce ABoolTipoBase */
            {
                ArrayList<Object> list = new46();
                push(goTo(25), list, false);
            }
            break;
            case 47: /* reduce ARTipoBase */
            {
                ArrayList<Object> list = new47();
                push(goTo(25), list, false);
            }
            break;
            case 48: /* reduce ATipoEsp */
            {
                ArrayList<Object> list = new48();
                push(goTo(26), list, false);
            }
            break;
            case 49: /* reduce ARealTipoEsp */
            {
                ArrayList<Object> list = new49();
                push(goTo(26), list, false);
            }
            break;
            case 50: /* reduce ACaractTipoEsp */
            {
                ArrayList<Object> list = new50();
                push(goTo(26), list, false);
            }
            break;
            case 51: /* reduce ABoolTipoEsp */
            {
                ArrayList<Object> list = new51();
                push(goTo(26), list, false);
            }
            break;
            case 52: /* reduce ATipo */
            {
                ArrayList<Object> list = new52();
                push(goTo(27), list, false);
            }
            break;
            case 53: /* reduce AVetorTipo */
            {
                ArrayList<Object> list = new53();
                push(goTo(27), list, false);
            }
            break;
            case 54: /* reduce AExpr */
            {
                ArrayList<Object> list = new54();
                push(goTo(28), list, false);
            }
            break;
            case 55: /* reduce AOprsExpr */
            {
                ArrayList<Object> list = new55();
                push(goTo(28), list, false);
            }
            break;
            case 56: /* reduce AChamExpr */
            {
                ArrayList<Object> list = new56();
                push(goTo(28), list, false);
            }
            break;
            case 57: /* reduce AFatorOperadores */
            {
                ArrayList<Object> list = new57();
                push(goTo(29), list, false);
            }
            break;
            case 58: /* reduce AOpAdiOperadores */
            {
                ArrayList<Object> list = new58();
                push(goTo(29), list, false);
            }
            break;
            case 59: /* reduce AOpRelOperadores */
            {
                ArrayList<Object> list = new59();
                push(goTo(29), list, false);
            }
            break;
            case 60: /* reduce AOpBoolOperadores */
            {
                ArrayList<Object> list = new60();
                push(goTo(29), list, false);
            }
            break;
            case 61: /* reduce AOpRel */
            {
                ArrayList<Object> list = new61();
                push(goTo(30), list, false);
            }
            break;
            case 62: /* reduce AMenorQOpRel */
            {
                ArrayList<Object> list = new62();
                push(goTo(30), list, false);
            }
            break;
            case 63: /* reduce AMaiorQOpRel */
            {
                ArrayList<Object> list = new63();
                push(goTo(30), list, false);
            }
            break;
            case 64: /* reduce AMaiorIgualOpRel */
            {
                ArrayList<Object> list = new64();
                push(goTo(30), list, false);
            }
            break;
            case 65: /* reduce AMenorIgualOpRel */
            {
                ArrayList<Object> list = new65();
                push(goTo(30), list, false);
            }
            break;
            case 66: /* reduce AOpAdi */
            {
                ArrayList<Object> list = new66();
                push(goTo(31), list, false);
            }
            break;
            case 67: /* reduce AMenosOpAdi */
            {
                ArrayList<Object> list = new67();
                push(goTo(31), list, false);
            }
            break;
            case 68: /* reduce AOpMul */
            {
                ArrayList<Object> list = new68();
                push(goTo(32), list, false);
            }
            break;
            case 69: /* reduce ADivisaoOpMul */
            {
                ArrayList<Object> list = new69();
                push(goTo(32), list, false);
            }
            break;
            case 70: /* reduce AOpBool */
            {
                ArrayList<Object> list = new70();
                push(goTo(33), list, false);
            }
            break;
            case 71: /* reduce AOuOpBool */
            {
                ArrayList<Object> list = new71();
                push(goTo(33), list, false);
            }
            break;
            case 72: /* reduce ANaoOpBool */
            {
                ArrayList<Object> list = new72();
                push(goTo(33), list, false);
            }
            break;
            case 73: /* reduce ATermoFator */
            {
                ArrayList<Object> list = new73();
                push(goTo(34), list, false);
            }
            break;
            case 74: /* reduce AOpMulFator */
            {
                ArrayList<Object> list = new74();
                push(goTo(34), list, false);
            }
            break;
            case 75: /* reduce ANumeroTermo */
            {
                ArrayList<Object> list = new75();
                push(goTo(35), list, false);
            }
            break;
            case 76: /* reduce AVarTermo */
            {
                ArrayList<Object> list = new76();
                push(goTo(35), list, false);
            }
            break;
            case 77: /* reduce AExprTermo */
            {
                ArrayList<Object> list = new77();
                push(goTo(35), list, false);
            }
            break;
            case 78: /* reduce AChamada */
            {
                ArrayList<Object> list = new78();
                push(goTo(36), list, false);
            }
            break;
            case 79: /* reduce AListaExp */
            {
                ArrayList<Object> list = new79();
                push(goTo(37), list, false);
            }
            break;
            case 80: /* reduce AListaListaExp */
            {
                ArrayList<Object> list = new80();
                push(goTo(37), list, false);
            }
            break;
            case 81: /* reduce AExpListaExp */
            {
                ArrayList<Object> list = new81();
                push(goTo(37), list, false);
            }
            break;
        }
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new0() /* reduce ADecVar */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PDecVar pdecvarNode1;
        {
            // Block
        PTipo ptipoNode2;
        PListaNomes plistanomesNode3;
        TPontoevirgula tpontoevirgulaNode4;
        ptipoNode2 = (PTipo)nodeArrayList1.get(0);
        plistanomesNode3 = (PListaNomes)nodeArrayList2.get(0);
        tpontoevirgulaNode4 = (TPontoevirgula)nodeArrayList3.get(0);

        pdecvarNode1 = new ADecVar(ptipoNode2, plistanomesNode3, tpontoevirgulaNode4);
        }
	nodeList.add(pdecvarNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new1() /* reduce AListaNomes */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PListaNomes plistanomesNode1;
        {
            // Block
        PListaNomes plistanomesNode2;
        TVirgula tvirgulaNode3;
        TIdentificador tidentificadorNode4;
        plistanomesNode2 = (PListaNomes)nodeArrayList1.get(0);
        tvirgulaNode3 = (TVirgula)nodeArrayList2.get(0);
        tidentificadorNode4 = (TIdentificador)nodeArrayList3.get(0);

        plistanomesNode1 = new AListaNomes(plistanomesNode2, tvirgulaNode3, tidentificadorNode4);
        }
	nodeList.add(plistanomesNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new2() /* reduce AIdListaNomes */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PListaNomes plistanomesNode1;
        {
            // Block
        TIdentificador tidentificadorNode2;
        tidentificadorNode2 = (TIdentificador)nodeArrayList1.get(0);

        plistanomesNode1 = new AIdListaNomes(tidentificadorNode2);
        }
	nodeList.add(plistanomesNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new3() /* reduce ADecFuncao */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PDecFuncao pdecfuncaoNode1;
        {
            // Block
        PTipoRetorno ptiporetornoNode2;
        TIdentificador tidentificadorNode3;
        TAbreparenteses tabreparentesesNode4;
        PParametros pparametrosNode5;
        TFechaparenteses tfechaparentesesNode6;
        PBloco pblocoNode7;
        ptiporetornoNode2 = (PTipoRetorno)nodeArrayList1.get(0);
        tidentificadorNode3 = (TIdentificador)nodeArrayList2.get(0);
        tabreparentesesNode4 = (TAbreparenteses)nodeArrayList3.get(0);
        pparametrosNode5 = (PParametros)nodeArrayList4.get(0);
        tfechaparentesesNode6 = (TFechaparenteses)nodeArrayList5.get(0);
        pblocoNode7 = (PBloco)nodeArrayList6.get(0);

        pdecfuncaoNode1 = new ADecFuncao(ptiporetornoNode2, tidentificadorNode3, tabreparentesesNode4, pparametrosNode5, tfechaparentesesNode6, pblocoNode7);
        }
	nodeList.add(pdecfuncaoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new4() /* reduce ATipoRetorno */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PTipoRetorno ptiporetornoNode1;
        {
            // Block
        PTipo ptipoNode2;
        ptipoNode2 = (PTipo)nodeArrayList1.get(0);

        ptiporetornoNode1 = new ATipoRetorno(ptipoNode2);
        }
	nodeList.add(ptiporetornoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new5() /* reduce APVaziaParametros */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        PParametros pparametrosNode1;
        {
            // Block

        pparametrosNode1 = new APVaziaParametros();
        }
	nodeList.add(pparametrosNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new6() /* reduce AParamsParametros */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PParametros pparametrosNode1;
        {
            // Block
        PParametros pparametrosNode2;
        TBarra tbarraNode3;
        PParametro pparametroNode4;
        pparametrosNode2 = (PParametros)nodeArrayList1.get(0);
        tbarraNode3 = (TBarra)nodeArrayList2.get(0);
        pparametroNode4 = (PParametro)nodeArrayList3.get(0);

        pparametrosNode1 = new AParamsParametros(pparametrosNode2, tbarraNode3, pparametroNode4);
        }
	nodeList.add(pparametrosNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new7() /* reduce AParamParametros */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PParametros pparametrosNode1;
        {
            // Block
        PParametro pparametroNode2;
        pparametroNode2 = (PParametro)nodeArrayList1.get(0);

        pparametrosNode1 = new AParamParametros(pparametroNode2);
        }
	nodeList.add(pparametrosNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new8() /* reduce AParamParametro */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PParametro pparametroNode1;
        {
            // Block
        PTipo ptipoNode2;
        TIdentificador tidentificadorNode3;
        ptipoNode2 = (PTipo)nodeArrayList1.get(0);
        tidentificadorNode3 = (TIdentificador)nodeArrayList2.get(0);

        pparametroNode1 = new AParamParametro(ptipoNode2, tidentificadorNode3);
        }
	nodeList.add(pparametroNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new9() /* reduce ABloco */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PBloco pblocoNode1;
        {
            // Block
        TInicio tinicioNode2;
        PListaDec plistadecNode3;
        PListaComando plistacomandoNode4;
        TFim tfimNode5;
        tinicioNode2 = (TInicio)nodeArrayList1.get(0);
        plistadecNode3 = (PListaDec)nodeArrayList2.get(0);
        plistacomandoNode4 = (PListaComando)nodeArrayList3.get(0);
        tfimNode5 = (TFim)nodeArrayList4.get(0);

        pblocoNode1 = new ABloco(tinicioNode2, plistadecNode3, plistacomandoNode4, tfimNode5);
        }
	nodeList.add(pblocoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new10() /* reduce AListaDec */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        PListaDec plistadecNode1;
        {
            // Block

        plistadecNode1 = new AListaDec();
        }
	nodeList.add(plistadecNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new11() /* reduce AListaListaDec */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PListaDec plistadecNode1;
        {
            // Block
        PListaDec1 plistadec1Node2;
        plistadec1Node2 = (PListaDec1)nodeArrayList1.get(0);

        plistadecNode1 = new AListaListaDec(plistadec1Node2);
        }
	nodeList.add(plistadecNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new12() /* reduce AListaDecListaDec1 */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PListaDec1 plistadec1Node1;
        {
            // Block
        PDecVar pdecvarNode2;
        PListaDec1 plistadec1Node3;
        pdecvarNode2 = (PDecVar)nodeArrayList1.get(0);
        plistadec1Node3 = (PListaDec1)nodeArrayList2.get(0);

        plistadec1Node1 = new AListaDecListaDec1(pdecvarNode2, plistadec1Node3);
        }
	nodeList.add(plistadec1Node1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new13() /* reduce ADecListaDec1 */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PListaDec1 plistadec1Node1;
        {
            // Block
        PDecVar pdecvarNode2;
        pdecvarNode2 = (PDecVar)nodeArrayList1.get(0);

        plistadec1Node1 = new ADecListaDec1(pdecvarNode2);
        }
	nodeList.add(plistadec1Node1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new14() /* reduce AListaComando */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        PListaComando plistacomandoNode1;
        {
            // Block

        plistacomandoNode1 = new AListaComando();
        }
	nodeList.add(plistacomandoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new15() /* reduce AListaListaComando */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PListaComando plistacomandoNode1;
        {
            // Block
        PListaComando1 plistacomando1Node2;
        plistacomando1Node2 = (PListaComando1)nodeArrayList1.get(0);

        plistacomandoNode1 = new AListaListaComando(plistacomando1Node2);
        }
	nodeList.add(plistacomandoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new16() /* reduce AListaComListaComando1 */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PListaComando1 plistacomando1Node1;
        {
            // Block
        PComando pcomandoNode2;
        PListaComando1 plistacomando1Node3;
        pcomandoNode2 = (PComando)nodeArrayList1.get(0);
        plistacomando1Node3 = (PListaComando1)nodeArrayList2.get(0);

        plistacomando1Node1 = new AListaComListaComando1(pcomandoNode2, plistacomando1Node3);
        }
	nodeList.add(plistacomando1Node1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new17() /* reduce AComandoListaComando1 */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PListaComando1 plistacomando1Node1;
        {
            // Block
        PComando pcomandoNode2;
        pcomandoNode2 = (PComando)nodeArrayList1.get(0);

        plistacomando1Node1 = new AComandoListaComando1(pcomandoNode2);
        }
	nodeList.add(plistacomando1Node1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new18() /* reduce AComando */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComando pcomandoNode1;
        {
            // Block
        PComandoSe pcomandoseNode2;
        pcomandoseNode2 = (PComandoSe)nodeArrayList1.get(0);

        pcomandoNode1 = new AComando(pcomandoseNode2);
        }
	nodeList.add(pcomandoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new19() /* reduce AComSeComando */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComando pcomandoNode1;
        {
            // Block
        PComandoSenao pcomandosenaoNode2;
        pcomandosenaoNode2 = (PComandoSenao)nodeArrayList1.get(0);

        pcomandoNode1 = new AComSeComando(pcomandosenaoNode2);
        }
	nodeList.add(pcomandoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new20() /* reduce AEnquantoComando */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComando pcomandoNode1;
        {
            // Block
        PComandoEnquanto pcomandoenquantoNode2;
        pcomandoenquantoNode2 = (PComandoEnquanto)nodeArrayList1.get(0);

        pcomandoNode1 = new AEnquantoComando(pcomandoenquantoNode2);
        }
	nodeList.add(pcomandoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new21() /* reduce AParaComando */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComando pcomandoNode1;
        {
            // Block
        PComandoPara pcomandoparaNode2;
        pcomandoparaNode2 = (PComandoPara)nodeArrayList1.get(0);

        pcomandoNode1 = new AParaComando(pcomandoparaNode2);
        }
	nodeList.add(pcomandoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new22() /* reduce AParaCadaComando */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComando pcomandoNode1;
        {
            // Block
        PComandoParaCada pcomandoparacadaNode2;
        pcomandoparacadaNode2 = (PComandoParaCada)nodeArrayList1.get(0);

        pcomandoNode1 = new AParaCadaComando(pcomandoparacadaNode2);
        }
	nodeList.add(pcomandoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new23() /* reduce AAtribuicaoComando */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComando pcomandoNode1;
        {
            // Block
        PAtrib patribNode2;
        PListaPontoVirgula plistapontovirgulaNode3;
        patribNode2 = (PAtrib)nodeArrayList1.get(0);
        plistapontovirgulaNode3 = (PListaPontoVirgula)nodeArrayList2.get(0);

        pcomandoNode1 = new AAtribuicaoComando(patribNode2, plistapontovirgulaNode3);
        }
	nodeList.add(pcomandoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new24() /* reduce ARetornoComando */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComando pcomandoNode1;
        {
            // Block
        PRetorno pretornoNode2;
        pretornoNode2 = (PRetorno)nodeArrayList1.get(0);

        pcomandoNode1 = new ARetornoComando(pretornoNode2);
        }
	nodeList.add(pcomandoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new25() /* reduce AChComando */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComando pcomandoNode1;
        {
            // Block
        PChamada pchamadaNode2;
        PListaPontoVirgula plistapontovirgulaNode3;
        pchamadaNode2 = (PChamada)nodeArrayList1.get(0);
        plistapontovirgulaNode3 = (PListaPontoVirgula)nodeArrayList2.get(0);

        pcomandoNode1 = new AChComando(pchamadaNode2, plistapontovirgulaNode3);
        }
	nodeList.add(pcomandoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new26() /* reduce AComandoSe */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComandoSe pcomandoseNode1;
        {
            // Block
        TSe tseNode2;
        TAbreparenteses tabreparentesesNode3;
        PExpr pexprNode4;
        TFechaparenteses tfechaparentesesNode5;
        PComando pcomandoNode6;
        tseNode2 = (TSe)nodeArrayList1.get(0);
        tabreparentesesNode3 = (TAbreparenteses)nodeArrayList2.get(0);
        pexprNode4 = (PExpr)nodeArrayList3.get(0);
        tfechaparentesesNode5 = (TFechaparenteses)nodeArrayList4.get(0);
        pcomandoNode6 = (PComando)nodeArrayList5.get(0);

        pcomandoseNode1 = new AComandoSe(tseNode2, tabreparentesesNode3, pexprNode4, tfechaparentesesNode5, pcomandoNode6);
        }
	nodeList.add(pcomandoseNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new27() /* reduce AComandoSenao */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComandoSenao pcomandosenaoNode1;
        {
            // Block
        PComandoSe pcomandoseNode2;
        TSenao tsenaoNode3;
        PComando pcomandoNode4;
        pcomandoseNode2 = (PComandoSe)nodeArrayList1.get(0);
        tsenaoNode3 = (TSenao)nodeArrayList2.get(0);
        pcomandoNode4 = (PComando)nodeArrayList3.get(0);

        pcomandosenaoNode1 = new AComandoSenao(pcomandoseNode2, tsenaoNode3, pcomandoNode4);
        }
	nodeList.add(pcomandosenaoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new28() /* reduce AComandoEnquanto */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComandoEnquanto pcomandoenquantoNode1;
        {
            // Block
        TEnquanto tenquantoNode2;
        TAbreparenteses tabreparentesesNode3;
        PExpr pexprNode4;
        TFechaparenteses tfechaparentesesNode5;
        PComando pcomandoNode6;
        tenquantoNode2 = (TEnquanto)nodeArrayList1.get(0);
        tabreparentesesNode3 = (TAbreparenteses)nodeArrayList2.get(0);
        pexprNode4 = (PExpr)nodeArrayList3.get(0);
        tfechaparentesesNode5 = (TFechaparenteses)nodeArrayList4.get(0);
        pcomandoNode6 = (PComando)nodeArrayList5.get(0);

        pcomandoenquantoNode1 = new AComandoEnquanto(tenquantoNode2, tabreparentesesNode3, pexprNode4, tfechaparentesesNode5, pcomandoNode6);
        }
	nodeList.add(pcomandoenquantoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new29() /* reduce AComandoPara */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComandoPara pcomandoparaNode1;
        {
            // Block
        TPara tparaNode2;
        TAbreparenteses tabreparentesesNode3;
        PAuxPara pauxparaNode4;
        TFechaparenteses tfechaparentesesNode5;
        PComando pcomandoNode6;
        tparaNode2 = (TPara)nodeArrayList1.get(0);
        tabreparentesesNode3 = (TAbreparenteses)nodeArrayList2.get(0);
        pauxparaNode4 = (PAuxPara)nodeArrayList3.get(0);
        tfechaparentesesNode5 = (TFechaparenteses)nodeArrayList4.get(0);
        pcomandoNode6 = (PComando)nodeArrayList5.get(0);

        pcomandoparaNode1 = new AComandoPara(tparaNode2, tabreparentesesNode3, pauxparaNode4, tfechaparentesesNode5, pcomandoNode6);
        }
	nodeList.add(pcomandoparaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new30() /* reduce AComandoParaCada */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComandoParaCada pcomandoparacadaNode1;
        {
            // Block
        TParacada tparacadaNode2;
        TAbreparenteses tabreparentesesNode3;
        PAuxParaCada pauxparacadaNode4;
        TFechaparenteses tfechaparentesesNode5;
        PComando pcomandoNode6;
        tparacadaNode2 = (TParacada)nodeArrayList1.get(0);
        tabreparentesesNode3 = (TAbreparenteses)nodeArrayList2.get(0);
        pauxparacadaNode4 = (PAuxParaCada)nodeArrayList3.get(0);
        tfechaparentesesNode5 = (TFechaparenteses)nodeArrayList4.get(0);
        pcomandoNode6 = (PComando)nodeArrayList5.get(0);

        pcomandoparacadaNode1 = new AComandoParaCada(tparacadaNode2, tabreparentesesNode3, pauxparacadaNode4, tfechaparentesesNode5, pcomandoNode6);
        }
	nodeList.add(pcomandoparacadaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new31() /* reduce AAuxPara */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PAuxPara pauxparaNode1;
        {
            // Block
        PListaAtrib plistaatribNode2;
        PListaPontoVirgula plistapontovirgulaNode3;
        plistaatribNode2 = (PListaAtrib)nodeArrayList1.get(0);
        plistapontovirgulaNode3 = (PListaPontoVirgula)nodeArrayList2.get(0);

        pauxparaNode1 = new AAuxPara(plistaatribNode2, plistapontovirgulaNode3);
        }
	nodeList.add(pauxparaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new32() /* reduce AP1ListaPontoVirgula */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PListaPontoVirgula plistapontovirgulaNode1;
        {
            // Block
        PExpr pexprNode2;
        TPontoevirgula tpontoevirgulaNode3;
        pexprNode2 = (PExpr)nodeArrayList1.get(0);
        tpontoevirgulaNode3 = (TPontoevirgula)nodeArrayList2.get(0);

        plistapontovirgulaNode1 = new AP1ListaPontoVirgula(pexprNode2, tpontoevirgulaNode3);
        }
	nodeList.add(plistapontovirgulaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new33() /* reduce AP2ListaPontoVirgula */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PListaPontoVirgula plistapontovirgulaNode1;
        {
            // Block
        TPontoevirgula tpontoevirgulaNode2;
        PAtrib patribNode3;
        tpontoevirgulaNode2 = (TPontoevirgula)nodeArrayList1.get(0);
        patribNode3 = (PAtrib)nodeArrayList2.get(0);

        plistapontovirgulaNode1 = new AP2ListaPontoVirgula(tpontoevirgulaNode2, patribNode3);
        }
	nodeList.add(plistapontovirgulaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new34() /* reduce AAuxParaCada */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PAuxParaCada pauxparacadaNode1;
        {
            // Block
        PTipo ptipoNode2;
        PListaId plistaidNode3;
        ptipoNode2 = (PTipo)nodeArrayList1.get(0);
        plistaidNode3 = (PListaId)nodeArrayList2.get(0);

        pauxparacadaNode1 = new AAuxParaCada(ptipoNode2, plistaidNode3);
        }
	nodeList.add(pauxparacadaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new35() /* reduce AI1ListaId */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PListaId plistaidNode1;
        {
            // Block
        TIdentificador tidentificadorNode2;
        tidentificadorNode2 = (TIdentificador)nodeArrayList1.get(0);

        plistaidNode1 = new AI1ListaId(tidentificadorNode2);
        }
	nodeList.add(plistaidNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new36() /* reduce AI2ListaId */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PListaId plistaidNode1;
        {
            // Block
        TDoispontos tdoispontosNode2;
        TIdentificador tidentificadorNode3;
        tdoispontosNode2 = (TDoispontos)nodeArrayList1.get(0);
        tidentificadorNode3 = (TIdentificador)nodeArrayList2.get(0);

        plistaidNode1 = new AI2ListaId(tdoispontosNode2, tidentificadorNode3);
        }
	nodeList.add(plistaidNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new37() /* reduce AAtrib */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PAtrib patribNode1;
        {
            // Block
        PVar pvarNode2;
        TAtribuicao tatribuicaoNode3;
        PExpr pexprNode4;
        pvarNode2 = (PVar)nodeArrayList1.get(0);
        tatribuicaoNode3 = (TAtribuicao)nodeArrayList2.get(0);
        pexprNode4 = (PExpr)nodeArrayList3.get(0);

        patribNode1 = new AAtrib(pvarNode2, tatribuicaoNode3, pexprNode4);
        }
	nodeList.add(patribNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new38() /* reduce AVariavelTipadaAtrib */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PAtrib patribNode1;
        {
            // Block
        PTipo ptipoNode2;
        PAtrib patribNode3;
        ptipoNode2 = (PTipo)nodeArrayList1.get(0);
        patribNode3 = (PAtrib)nodeArrayList2.get(0);

        patribNode1 = new AVariavelTipadaAtrib(ptipoNode2, patribNode3);
        }
	nodeList.add(patribNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new39() /* reduce AListaAtrib */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PListaAtrib plistaatribNode1;
        {
            // Block
        PListaAtrib plistaatribNode2;
        TVirgula tvirgulaNode3;
        PAtrib patribNode4;
        plistaatribNode2 = (PListaAtrib)nodeArrayList1.get(0);
        tvirgulaNode3 = (TVirgula)nodeArrayList2.get(0);
        patribNode4 = (PAtrib)nodeArrayList3.get(0);

        plistaatribNode1 = new AListaAtrib(plistaatribNode2, tvirgulaNode3, patribNode4);
        }
	nodeList.add(plistaatribNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new40() /* reduce AAtribListaAtrib */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PListaAtrib plistaatribNode1;
        {
            // Block
        PAtrib patribNode2;
        patribNode2 = (PAtrib)nodeArrayList1.get(0);

        plistaatribNode1 = new AAtribListaAtrib(patribNode2);
        }
	nodeList.add(plistaatribNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new41() /* reduce ARetorno */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PRetorno pretornoNode1;
        {
            // Block
        TRetorne tretorneNode2;
        PVar pvarNode3;
        TPontoevirgula tpontoevirgulaNode4;
        tretorneNode2 = (TRetorne)nodeArrayList1.get(0);
        pvarNode3 = (PVar)nodeArrayList2.get(0);
        tpontoevirgulaNode4 = (TPontoevirgula)nodeArrayList3.get(0);

        pretornoNode1 = new ARetorno(tretorneNode2, pvarNode3, tpontoevirgulaNode4);
        }
	nodeList.add(pretornoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new42() /* reduce AVar */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PVar pvarNode1;
        {
            // Block
        TIdentificador tidentificadorNode2;
        tidentificadorNode2 = (TIdentificador)nodeArrayList1.get(0);

        pvarNode1 = new AVar(tidentificadorNode2);
        }
	nodeList.add(pvarNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new43() /* reduce AExprVar */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PVar pvarNode1;
        {
            // Block
        PVar pvarNode2;
        TAbrecolchetes tabrecolchetesNode3;
        PExpr pexprNode4;
        TFechacolchetes tfechacolchetesNode5;
        pvarNode2 = (PVar)nodeArrayList1.get(0);
        tabrecolchetesNode3 = (TAbrecolchetes)nodeArrayList2.get(0);
        pexprNode4 = (PExpr)nodeArrayList3.get(0);
        tfechacolchetesNode5 = (TFechacolchetes)nodeArrayList4.get(0);

        pvarNode1 = new AExprVar(pvarNode2, tabrecolchetesNode3, pexprNode4, tfechacolchetesNode5);
        }
	nodeList.add(pvarNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new44() /* reduce AIntTipoBase */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PTipoBase ptipobaseNode1;
        {
            // Block
        TInteiro tinteiroNode2;
        tinteiroNode2 = (TInteiro)nodeArrayList1.get(0);

        ptipobaseNode1 = new AIntTipoBase(tinteiroNode2);
        }
	nodeList.add(ptipobaseNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new45() /* reduce ACaracterTipoBase */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PTipoBase ptipobaseNode1;
        {
            // Block
        TCaractere tcaractereNode2;
        tcaractereNode2 = (TCaractere)nodeArrayList1.get(0);

        ptipobaseNode1 = new ACaracterTipoBase(tcaractereNode2);
        }
	nodeList.add(ptipobaseNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new46() /* reduce ABoolTipoBase */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PTipoBase ptipobaseNode1;
        {
            // Block
        TBooleano tbooleanoNode2;
        tbooleanoNode2 = (TBooleano)nodeArrayList1.get(0);

        ptipobaseNode1 = new ABoolTipoBase(tbooleanoNode2);
        }
	nodeList.add(ptipobaseNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new47() /* reduce ARTipoBase */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PTipoBase ptipobaseNode1;
        {
            // Block
        TReal trealNode2;
        trealNode2 = (TReal)nodeArrayList1.get(0);

        ptipobaseNode1 = new ARTipoBase(trealNode2);
        }
	nodeList.add(ptipobaseNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new48() /* reduce ATipoEsp */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PTipoEsp ptipoespNode1;
        {
            // Block
        TInteiroLiteral tinteiroliteralNode2;
        tinteiroliteralNode2 = (TInteiroLiteral)nodeArrayList1.get(0);

        ptipoespNode1 = new ATipoEsp(tinteiroliteralNode2);
        }
	nodeList.add(ptipoespNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new49() /* reduce ARealTipoEsp */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PTipoEsp ptipoespNode1;
        {
            // Block
        TRealLiteral trealliteralNode2;
        trealliteralNode2 = (TRealLiteral)nodeArrayList1.get(0);

        ptipoespNode1 = new ARealTipoEsp(trealliteralNode2);
        }
	nodeList.add(ptipoespNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new50() /* reduce ACaractTipoEsp */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PTipoEsp ptipoespNode1;
        {
            // Block
        TCaractereLiteral tcaractereliteralNode2;
        tcaractereliteralNode2 = (TCaractereLiteral)nodeArrayList1.get(0);

        ptipoespNode1 = new ACaractTipoEsp(tcaractereliteralNode2);
        }
	nodeList.add(ptipoespNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new51() /* reduce ABoolTipoEsp */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PTipoEsp ptipoespNode1;
        {
            // Block
        TBoolLiteral tboolliteralNode2;
        tboolliteralNode2 = (TBoolLiteral)nodeArrayList1.get(0);

        ptipoespNode1 = new ABoolTipoEsp(tboolliteralNode2);
        }
	nodeList.add(ptipoespNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new52() /* reduce ATipo */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PTipo ptipoNode1;
        {
            // Block
        PTipoBase ptipobaseNode2;
        ptipobaseNode2 = (PTipoBase)nodeArrayList1.get(0);

        ptipoNode1 = new ATipo(ptipobaseNode2);
        }
	nodeList.add(ptipoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new53() /* reduce AVetorTipo */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PTipo ptipoNode1;
        {
            // Block
        TVetor tvetorNode2;
        PTipoBase ptipobaseNode3;
        tvetorNode2 = (TVetor)nodeArrayList1.get(0);
        ptipobaseNode3 = (PTipoBase)nodeArrayList2.get(0);

        ptipoNode1 = new AVetorTipo(tvetorNode2, ptipobaseNode3);
        }
	nodeList.add(ptipoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new54() /* reduce AExpr */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpr pexprNode1;
        {
            // Block
        PTipoEsp ptipoespNode2;
        ptipoespNode2 = (PTipoEsp)nodeArrayList1.get(0);

        pexprNode1 = new AExpr(ptipoespNode2);
        }
	nodeList.add(pexprNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new55() /* reduce AOprsExpr */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpr pexprNode1;
        {
            // Block
        POperadores poperadoresNode2;
        poperadoresNode2 = (POperadores)nodeArrayList1.get(0);

        pexprNode1 = new AOprsExpr(poperadoresNode2);
        }
	nodeList.add(pexprNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new56() /* reduce AChamExpr */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpr pexprNode1;
        {
            // Block
        PChamada pchamadaNode2;
        pchamadaNode2 = (PChamada)nodeArrayList1.get(0);

        pexprNode1 = new AChamExpr(pchamadaNode2);
        }
	nodeList.add(pexprNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new57() /* reduce AFatorOperadores */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        POperadores poperadoresNode1;
        {
            // Block
        PFator pfatorNode2;
        pfatorNode2 = (PFator)nodeArrayList1.get(0);

        poperadoresNode1 = new AFatorOperadores(pfatorNode2);
        }
	nodeList.add(poperadoresNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new58() /* reduce AOpAdiOperadores */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        POperadores poperadoresNode1;
        {
            // Block
        PExpr pexprNode2;
        POpAdi popadiNode3;
        PFator pfatorNode4;
        pexprNode2 = (PExpr)nodeArrayList1.get(0);
        popadiNode3 = (POpAdi)nodeArrayList2.get(0);
        pfatorNode4 = (PFator)nodeArrayList3.get(0);

        poperadoresNode1 = new AOpAdiOperadores(pexprNode2, popadiNode3, pfatorNode4);
        }
	nodeList.add(poperadoresNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new59() /* reduce AOpRelOperadores */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        POperadores poperadoresNode1;
        {
            // Block
        PExpr pexprNode2;
        POpRel poprelNode3;
        PFator pfatorNode4;
        pexprNode2 = (PExpr)nodeArrayList1.get(0);
        poprelNode3 = (POpRel)nodeArrayList2.get(0);
        pfatorNode4 = (PFator)nodeArrayList3.get(0);

        poperadoresNode1 = new AOpRelOperadores(pexprNode2, poprelNode3, pfatorNode4);
        }
	nodeList.add(poperadoresNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new60() /* reduce AOpBoolOperadores */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        POperadores poperadoresNode1;
        {
            // Block
        PExpr pexprNode2;
        POpBool popboolNode3;
        PFator pfatorNode4;
        pexprNode2 = (PExpr)nodeArrayList1.get(0);
        popboolNode3 = (POpBool)nodeArrayList2.get(0);
        pfatorNode4 = (PFator)nodeArrayList3.get(0);

        poperadoresNode1 = new AOpBoolOperadores(pexprNode2, popboolNode3, pfatorNode4);
        }
	nodeList.add(poperadoresNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new61() /* reduce AOpRel */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        POpRel poprelNode1;
        {
            // Block
        TIgual tigualNode2;
        tigualNode2 = (TIgual)nodeArrayList1.get(0);

        poprelNode1 = new AOpRel(tigualNode2);
        }
	nodeList.add(poprelNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new62() /* reduce AMenorQOpRel */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        POpRel poprelNode1;
        {
            // Block
        TMenor tmenorNode2;
        tmenorNode2 = (TMenor)nodeArrayList1.get(0);

        poprelNode1 = new AMenorQOpRel(tmenorNode2);
        }
	nodeList.add(poprelNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new63() /* reduce AMaiorQOpRel */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        POpRel poprelNode1;
        {
            // Block
        TMaior tmaiorNode2;
        tmaiorNode2 = (TMaior)nodeArrayList1.get(0);

        poprelNode1 = new AMaiorQOpRel(tmaiorNode2);
        }
	nodeList.add(poprelNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new64() /* reduce AMaiorIgualOpRel */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        POpRel poprelNode1;
        {
            // Block
        TMaiorIgual tmaiorigualNode2;
        tmaiorigualNode2 = (TMaiorIgual)nodeArrayList1.get(0);

        poprelNode1 = new AMaiorIgualOpRel(tmaiorigualNode2);
        }
	nodeList.add(poprelNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new65() /* reduce AMenorIgualOpRel */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        POpRel poprelNode1;
        {
            // Block
        TMenorIgual tmenorigualNode2;
        tmenorigualNode2 = (TMenorIgual)nodeArrayList1.get(0);

        poprelNode1 = new AMenorIgualOpRel(tmenorigualNode2);
        }
	nodeList.add(poprelNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new66() /* reduce AOpAdi */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        POpAdi popadiNode1;
        {
            // Block
        TAdicao tadicaoNode2;
        tadicaoNode2 = (TAdicao)nodeArrayList1.get(0);

        popadiNode1 = new AOpAdi(tadicaoNode2);
        }
	nodeList.add(popadiNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new67() /* reduce AMenosOpAdi */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        POpAdi popadiNode1;
        {
            // Block
        TSubtracao tsubtracaoNode2;
        tsubtracaoNode2 = (TSubtracao)nodeArrayList1.get(0);

        popadiNode1 = new AMenosOpAdi(tsubtracaoNode2);
        }
	nodeList.add(popadiNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new68() /* reduce AOpMul */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        POpMul popmulNode1;
        {
            // Block
        TMultiplicacao tmultiplicacaoNode2;
        tmultiplicacaoNode2 = (TMultiplicacao)nodeArrayList1.get(0);

        popmulNode1 = new AOpMul(tmultiplicacaoNode2);
        }
	nodeList.add(popmulNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new69() /* reduce ADivisaoOpMul */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        POpMul popmulNode1;
        {
            // Block
        TDivisao tdivisaoNode2;
        tdivisaoNode2 = (TDivisao)nodeArrayList1.get(0);

        popmulNode1 = new ADivisaoOpMul(tdivisaoNode2);
        }
	nodeList.add(popmulNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new70() /* reduce AOpBool */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        POpBool popboolNode1;
        {
            // Block
        TE teNode2;
        teNode2 = (TE)nodeArrayList1.get(0);

        popboolNode1 = new AOpBool(teNode2);
        }
	nodeList.add(popboolNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new71() /* reduce AOuOpBool */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        POpBool popboolNode1;
        {
            // Block
        TOu touNode2;
        touNode2 = (TOu)nodeArrayList1.get(0);

        popboolNode1 = new AOuOpBool(touNode2);
        }
	nodeList.add(popboolNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new72() /* reduce ANaoOpBool */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        POpBool popboolNode1;
        {
            // Block
        TNao tnaoNode2;
        tnaoNode2 = (TNao)nodeArrayList1.get(0);

        popboolNode1 = new ANaoOpBool(tnaoNode2);
        }
	nodeList.add(popboolNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new73() /* reduce ATermoFator */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PFator pfatorNode1;
        {
            // Block
        PTermo ptermoNode2;
        ptermoNode2 = (PTermo)nodeArrayList1.get(0);

        pfatorNode1 = new ATermoFator(ptermoNode2);
        }
	nodeList.add(pfatorNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new74() /* reduce AOpMulFator */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PFator pfatorNode1;
        {
            // Block
        PFator pfatorNode2;
        POpMul popmulNode3;
        PTermo ptermoNode4;
        pfatorNode2 = (PFator)nodeArrayList1.get(0);
        popmulNode3 = (POpMul)nodeArrayList2.get(0);
        ptermoNode4 = (PTermo)nodeArrayList3.get(0);

        pfatorNode1 = new AOpMulFator(pfatorNode2, popmulNode3, ptermoNode4);
        }
	nodeList.add(pfatorNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new75() /* reduce ANumeroTermo */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PTermo ptermoNode1;
        {
            // Block
        TNumero tnumeroNode2;
        tnumeroNode2 = (TNumero)nodeArrayList1.get(0);

        ptermoNode1 = new ANumeroTermo(tnumeroNode2);
        }
	nodeList.add(ptermoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new76() /* reduce AVarTermo */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PTermo ptermoNode1;
        {
            // Block
        PVar pvarNode2;
        pvarNode2 = (PVar)nodeArrayList1.get(0);

        ptermoNode1 = new AVarTermo(pvarNode2);
        }
	nodeList.add(ptermoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new77() /* reduce AExprTermo */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PTermo ptermoNode1;
        {
            // Block
        TAbreparenteses tabreparentesesNode2;
        PExpr pexprNode3;
        TFechaparenteses tfechaparentesesNode4;
        tabreparentesesNode2 = (TAbreparenteses)nodeArrayList1.get(0);
        pexprNode3 = (PExpr)nodeArrayList2.get(0);
        tfechaparentesesNode4 = (TFechaparenteses)nodeArrayList3.get(0);

        ptermoNode1 = new AExprTermo(tabreparentesesNode2, pexprNode3, tfechaparentesesNode4);
        }
	nodeList.add(ptermoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new78() /* reduce AChamada */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PChamada pchamadaNode1;
        {
            // Block
        TIdentificador tidentificadorNode2;
        TAbreparenteses tabreparentesesNode3;
        PListaExp plistaexpNode4;
        TFechaparenteses tfechaparentesesNode5;
        TPontoevirgula tpontoevirgulaNode6;
        tidentificadorNode2 = (TIdentificador)nodeArrayList1.get(0);
        tabreparentesesNode3 = (TAbreparenteses)nodeArrayList2.get(0);
        plistaexpNode4 = (PListaExp)nodeArrayList3.get(0);
        tfechaparentesesNode5 = (TFechaparenteses)nodeArrayList4.get(0);
        tpontoevirgulaNode6 = (TPontoevirgula)nodeArrayList5.get(0);

        pchamadaNode1 = new AChamada(tidentificadorNode2, tabreparentesesNode3, plistaexpNode4, tfechaparentesesNode5, tpontoevirgulaNode6);
        }
	nodeList.add(pchamadaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new79() /* reduce AListaExp */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        PListaExp plistaexpNode1;
        {
            // Block

        plistaexpNode1 = new AListaExp();
        }
	nodeList.add(plistaexpNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new80() /* reduce AListaListaExp */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PListaExp plistaexpNode1;
        {
            // Block
        PListaExp plistaexpNode2;
        TBarra tbarraNode3;
        PExpr pexprNode4;
        plistaexpNode2 = (PListaExp)nodeArrayList1.get(0);
        tbarraNode3 = (TBarra)nodeArrayList2.get(0);
        pexprNode4 = (PExpr)nodeArrayList3.get(0);

        plistaexpNode1 = new AListaListaExp(plistaexpNode2, tbarraNode3, pexprNode4);
        }
	nodeList.add(plistaexpNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new81() /* reduce AExpListaExp */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PListaExp plistaexpNode1;
        {
            // Block
        PExpr pexprNode2;
        pexprNode2 = (PExpr)nodeArrayList1.get(0);

        plistaexpNode1 = new AExpListaExp(pexprNode2);
        }
	nodeList.add(plistaexpNode1);
        return nodeList;
    }



    private static int[][][] actionTable;
/*      {
			{{-1, ERROR, 0}, {26, SHIFT, 1}, {28, SHIFT, 2}, {30, SHIFT, 3}, {32, SHIFT, 4}, {42, SHIFT, 5}, },
			{{-1, REDUCE, 44}, },
			{{-1, REDUCE, 45}, },
			{{-1, REDUCE, 47}, },
			{{-1, REDUCE, 46}, },
			{{-1, ERROR, 5}, {26, SHIFT, 1}, {28, SHIFT, 2}, {30, SHIFT, 3}, {32, SHIFT, 4}, },
			{{-1, ERROR, 6}, {45, ACCEPT, -1}, },
			{{-1, REDUCE, 52}, },
			{{-1, ERROR, 8}, {43, SHIFT, 10}, },
			{{-1, REDUCE, 53}, },
			{{-1, REDUCE, 2}, },
			{{-1, ERROR, 11}, {14, SHIFT, 12}, {16, SHIFT, 13}, },
			{{-1, ERROR, 12}, {43, SHIFT, 14}, },
			{{-1, REDUCE, 0}, },
			{{-1, REDUCE, 1}, },
        };*/
    private static int[][][] gotoTable;
/*      {
			{{-1, 6}, },
			{{-1, 11}, },
			{{-1, -1}, },
			{{-1, -1}, },
			{{-1, -1}, },
			{{-1, -1}, },
			{{-1, -1}, },
			{{-1, -1}, },
			{{-1, -1}, },
			{{-1, -1}, },
			{{-1, -1}, },
			{{-1, -1}, },
			{{-1, -1}, },
			{{-1, -1}, },
			{{-1, -1}, },
			{{-1, -1}, },
			{{-1, -1}, },
			{{-1, -1}, },
			{{-1, -1}, },
			{{-1, -1}, },
			{{-1, -1}, },
			{{-1, -1}, },
			{{-1, -1}, },
			{{-1, -1}, },
			{{-1, -1}, },
			{{-1, 7}, {5, 9}, },
			{{-1, -1}, },
			{{-1, 8}, },
			{{-1, -1}, },
			{{-1, -1}, },
			{{-1, -1}, },
			{{-1, -1}, },
			{{-1, -1}, },
			{{-1, -1}, },
			{{-1, -1}, },
			{{-1, -1}, },
			{{-1, -1}, },
			{{-1, -1}, },
        };*/
    private static String[] errorMessages;
/*      {
			"expecting: 'inteiro', 'caractere', 'real', 'booleano', 'vetor'",
			"expecting: identificador",
			"expecting: 'inteiro', 'caractere', 'real', 'booleano'",
			"expecting: EOF",
			"expecting: ',', ';'",
        };*/
    private static int[] errors;
/*      {
			0, 1, 1, 1, 1, 2, 3, 1, 1, 1, 4, 4, 1, 3, 4, 
        };*/

    static 
    {
        try
        {
            DataInputStream s = new DataInputStream(
                new BufferedInputStream(
                Parser.class.getResourceAsStream("parser.dat")));

            // read actionTable
            int length = s.readInt();
            Parser.actionTable = new int[length][][];
            for(int i = 0; i < Parser.actionTable.length; i++)
            {
                length = s.readInt();
                Parser.actionTable[i] = new int[length][3];
                for(int j = 0; j < Parser.actionTable[i].length; j++)
                {
                for(int k = 0; k < 3; k++)
                {
                    Parser.actionTable[i][j][k] = s.readInt();
                }
                }
            }

            // read gotoTable
            length = s.readInt();
            gotoTable = new int[length][][];
            for(int i = 0; i < gotoTable.length; i++)
            {
                length = s.readInt();
                gotoTable[i] = new int[length][2];
                for(int j = 0; j < gotoTable[i].length; j++)
                {
                for(int k = 0; k < 2; k++)
                {
                    gotoTable[i][j][k] = s.readInt();
                }
                }
            }

            // read errorMessages
            length = s.readInt();
            errorMessages = new String[length];
            for(int i = 0; i < errorMessages.length; i++)
            {
                length = s.readInt();
                StringBuffer buffer = new StringBuffer();

                for(int j = 0; j < length; j++)
                {
                buffer.append(s.readChar());
                }
                errorMessages[i] = buffer.toString();
            }

            // read errors
            length = s.readInt();
            errors = new int[length];
            for(int i = 0; i < errors.length; i++)
            {
                errors[i] = s.readInt();
            }

            s.close();
        }
        catch(Exception e)
        {
            throw new RuntimeException("The file \"parser.dat\" is either missing or corrupted.");
        }
    }
}
