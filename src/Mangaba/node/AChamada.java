/* This file was generated by SableCC (http://www.sablecc.org/). */

package Mangaba.node;

import Mangaba.analysis.*;

@SuppressWarnings("nls")
public final class AChamada extends PChamada
{
    private TIdentificador _identificador_;
    private TAbreparenteses _abreparenteses_;
    private PListaExp _listaExp_;
    private TFechaparenteses _fechaparenteses_;
    private TPontoevirgula _pontoevirgula_;

    public AChamada()
    {
        // Constructor
    }

    public AChamada(
        @SuppressWarnings("hiding") TIdentificador _identificador_,
        @SuppressWarnings("hiding") TAbreparenteses _abreparenteses_,
        @SuppressWarnings("hiding") PListaExp _listaExp_,
        @SuppressWarnings("hiding") TFechaparenteses _fechaparenteses_,
        @SuppressWarnings("hiding") TPontoevirgula _pontoevirgula_)
    {
        // Constructor
        setIdentificador(_identificador_);

        setAbreparenteses(_abreparenteses_);

        setListaExp(_listaExp_);

        setFechaparenteses(_fechaparenteses_);

        setPontoevirgula(_pontoevirgula_);

    }

    @Override
    public Object clone()
    {
        return new AChamada(
            cloneNode(this._identificador_),
            cloneNode(this._abreparenteses_),
            cloneNode(this._listaExp_),
            cloneNode(this._fechaparenteses_),
            cloneNode(this._pontoevirgula_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAChamada(this);
    }

    public TIdentificador getIdentificador()
    {
        return this._identificador_;
    }

    public void setIdentificador(TIdentificador node)
    {
        if(this._identificador_ != null)
        {
            this._identificador_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._identificador_ = node;
    }

    public TAbreparenteses getAbreparenteses()
    {
        return this._abreparenteses_;
    }

    public void setAbreparenteses(TAbreparenteses node)
    {
        if(this._abreparenteses_ != null)
        {
            this._abreparenteses_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._abreparenteses_ = node;
    }

    public PListaExp getListaExp()
    {
        return this._listaExp_;
    }

    public void setListaExp(PListaExp node)
    {
        if(this._listaExp_ != null)
        {
            this._listaExp_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._listaExp_ = node;
    }

    public TFechaparenteses getFechaparenteses()
    {
        return this._fechaparenteses_;
    }

    public void setFechaparenteses(TFechaparenteses node)
    {
        if(this._fechaparenteses_ != null)
        {
            this._fechaparenteses_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._fechaparenteses_ = node;
    }

    public TPontoevirgula getPontoevirgula()
    {
        return this._pontoevirgula_;
    }

    public void setPontoevirgula(TPontoevirgula node)
    {
        if(this._pontoevirgula_ != null)
        {
            this._pontoevirgula_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._pontoevirgula_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._identificador_)
            + toString(this._abreparenteses_)
            + toString(this._listaExp_)
            + toString(this._fechaparenteses_)
            + toString(this._pontoevirgula_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._identificador_ == child)
        {
            this._identificador_ = null;
            return;
        }

        if(this._abreparenteses_ == child)
        {
            this._abreparenteses_ = null;
            return;
        }

        if(this._listaExp_ == child)
        {
            this._listaExp_ = null;
            return;
        }

        if(this._fechaparenteses_ == child)
        {
            this._fechaparenteses_ = null;
            return;
        }

        if(this._pontoevirgula_ == child)
        {
            this._pontoevirgula_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._identificador_ == oldChild)
        {
            setIdentificador((TIdentificador) newChild);
            return;
        }

        if(this._abreparenteses_ == oldChild)
        {
            setAbreparenteses((TAbreparenteses) newChild);
            return;
        }

        if(this._listaExp_ == oldChild)
        {
            setListaExp((PListaExp) newChild);
            return;
        }

        if(this._fechaparenteses_ == oldChild)
        {
            setFechaparenteses((TFechaparenteses) newChild);
            return;
        }

        if(this._pontoevirgula_ == oldChild)
        {
            setPontoevirgula((TPontoevirgula) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
