/* This file was generated by SableCC (http://www.sablecc.org/). */

package Mangaba.node;

import Mangaba.analysis.*;

@SuppressWarnings("nls")
public final class AEnquantoComando extends PComando
{
    private PComandoEnquanto _comandoEnquanto_;

    public AEnquantoComando()
    {
        // Constructor
    }

    public AEnquantoComando(
        @SuppressWarnings("hiding") PComandoEnquanto _comandoEnquanto_)
    {
        // Constructor
        setComandoEnquanto(_comandoEnquanto_);

    }

    @Override
    public Object clone()
    {
        return new AEnquantoComando(
            cloneNode(this._comandoEnquanto_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAEnquantoComando(this);
    }

    public PComandoEnquanto getComandoEnquanto()
    {
        return this._comandoEnquanto_;
    }

    public void setComandoEnquanto(PComandoEnquanto node)
    {
        if(this._comandoEnquanto_ != null)
        {
            this._comandoEnquanto_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._comandoEnquanto_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._comandoEnquanto_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._comandoEnquanto_ == child)
        {
            this._comandoEnquanto_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._comandoEnquanto_ == oldChild)
        {
            setComandoEnquanto((PComandoEnquanto) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
