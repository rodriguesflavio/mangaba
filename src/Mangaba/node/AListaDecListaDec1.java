/* This file was generated by SableCC (http://www.sablecc.org/). */

package Mangaba.node;

import Mangaba.analysis.*;

@SuppressWarnings("nls")
public final class AListaDecListaDec1 extends PListaDec1
{
    private PDecVar _decVar_;
    private PListaDec1 _listaDec1_;

    public AListaDecListaDec1()
    {
        // Constructor
    }

    public AListaDecListaDec1(
        @SuppressWarnings("hiding") PDecVar _decVar_,
        @SuppressWarnings("hiding") PListaDec1 _listaDec1_)
    {
        // Constructor
        setDecVar(_decVar_);

        setListaDec1(_listaDec1_);

    }

    @Override
    public Object clone()
    {
        return new AListaDecListaDec1(
            cloneNode(this._decVar_),
            cloneNode(this._listaDec1_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAListaDecListaDec1(this);
    }

    public PDecVar getDecVar()
    {
        return this._decVar_;
    }

    public void setDecVar(PDecVar node)
    {
        if(this._decVar_ != null)
        {
            this._decVar_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._decVar_ = node;
    }

    public PListaDec1 getListaDec1()
    {
        return this._listaDec1_;
    }

    public void setListaDec1(PListaDec1 node)
    {
        if(this._listaDec1_ != null)
        {
            this._listaDec1_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._listaDec1_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._decVar_)
            + toString(this._listaDec1_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._decVar_ == child)
        {
            this._decVar_ = null;
            return;
        }

        if(this._listaDec1_ == child)
        {
            this._listaDec1_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._decVar_ == oldChild)
        {
            setDecVar((PDecVar) newChild);
            return;
        }

        if(this._listaDec1_ == oldChild)
        {
            setListaDec1((PListaDec1) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
